# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  APP_NAME: challenger-api
  USERNAME: 15069115057
  PASSWORD: zzxka1314
  ACCESS_KEY_ID: LTAI4FjLXTNXN864GMpntENj
  ACCESS_KEY_SECRET: yDR2zExDckFbnBgePROQmERrER3GM4
  REGION_ID: cn-beijing
  INSTANCE_ID: registry.cn-beijing.aliyuncs.com
  LOGIN_SERVER: registry.cn-beijing.aliyuncs.com

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
#    - name: Alibaba Cloud Container Registry (ACR) Login
#      uses: denverdino/acr-login@v0.1.0
#      with:
#        # Container registry username
#        username: 15069115057 # optional, default is
#        # Container registry password
#        password: zzxka1314 # optional, default is
#        # Access key id
#        access-key-id: LTAI4FjLXTNXN864GMpntENj # optional, default is
#        # Access key secret
#        access-key-secret: yDR2zExDckFbnBgePROQmERrER3GM4 # optional, default is
#        # Region id
#        region-id: cn-beijing # optional, default is cn-hangzhou
#        # Registry instance id
#        instance-id: registry-vpc.cn-beijing.aliyuncs.com/zzxka # optional, default is
#        # Container registry server url
#        login-server: registry-vpc.cn-beijing.aliyuncs.com/zzxka # default is
    # 打包
    - name: Build
      run: |
        echo "$(pwd)"
        docker run -i --rm -v "$(pwd)":/usr/src/"$APP_NAME" -w /usr/src/"$APP_NAME" -v /root/.m2:/root/.m2  maven:3.5.2-jdk-8 mvn -U clean package  -DskipTests -f pom.xml -P test
        docker build -t "$INSTANCE_ID"/zzxka/"$APP_NAME":latest .
        docker login "$INSTANCE_ID" -p "$PASSWORD" -u "$USERNAME"
        docker push "$INSTANCE_ID"/zzxka/"$APP_NAME":latest
        docker rmi --force `docker images | grep "$APP_NAME" | awk '{print $3}'`
